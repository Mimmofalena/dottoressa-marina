{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mimmo\\\\OneDrive\\\\Documents\\\\Programmazione\\\\Personal projects\\\\Marina Doc\\\\marina-doc-app\\\\client\\\\src\\\\components\\\\Contacts\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Grid, Typography, Box, TextField, Button, CardContent, Card, Paper, Link } from \"@mui/material\";\nimport axios from \"axios\";\nimport useStyles from \"../Utils/Styles\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const classes = useStyles();\n  const validationSchema = Yup.object({\n    firstName: Yup.string().required(\"Campo obbligatorio\"),\n    lastName: Yup.string().required(\"Campo obbligatorio\"),\n    email: Yup.string().email(\"Formato mail non valido\").required(\"Campo obbligatorio\"),\n    message: Yup.string().max(250, \"Max caratteri 250\").required(\"Campo obbligatorio\")\n  });\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    message: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    square: true,\n    className: classes.card,\n    id: \"contattami\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        newestOnTop: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            textAlign: \"center\",\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Come contattarmi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              p: 1,\n              mt: 1,\n              mb: 1,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                children: [\"Per visite, richieste, esami e ricette invia una mail a \\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"mailto:tricolidoc@gmail.com\",\n                  children: \"tricolidoc@gmail.com\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                children: [\"Per consulto medico indifferibile chiama \\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"tel:+39351-2530433\",\n                  children: \"351-2530433\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), \" o \\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"tel:+39091-520120\",\n                  children: \"091-520120\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NB:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), \" Le telefonate durante l'orario di visita verranno visualizzate e si verr\\xE0 ricontattati alla fine del ricevimento ambulatoriale, nel rispetto del paziente in visita e al fine di garantire un migliore ascolto.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 1,\n          mb: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            p: 1,\n            gutterBottom: true,\n            variant: \"h5\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"tel:+39091-520120\",\n              children: \"Studio: 091-520120\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            p: 1,\n            gutterBottom: true,\n            variant: \"h5\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"tel:+39091-520120\",\n              children: \"Cel: 351-2530433\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            p: 1,\n            gutterBottom: true,\n            variant: \"h5\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"mailto: tricolidoc@gmail.com\",\n              children: \"Mail: tricolidoc@gmail.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 1,\n          mb: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              textAlign: \"center\"\n            },\n            variant: \"h4\",\n            children: \"Invia una mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik // validateOnMount\n        , {\n          initialValues: initialValues,\n          validationSchema: validationSchema,\n          onSubmit: async (values, actions) => {\n            const payload = {\n              firstName: values.firstName,\n              lastName: values.lastName,\n              email: values.email,\n              message: values.message\n            };\n            await axios.post(\"https://marinatricolidoc.herokuapp.com/form\", payload).then(res => {\n              console.log(res);\n              if (res.status === 200) toast.success(\"Messaggio inviato con successo\");\n            }).catch(err => {\n              console.log(err);\n              toast.error(\"Si e' verificato un errore!\");\n            });\n          },\n          children: formik => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: formik.handleSubmit,\n                className: classes.form,\n                children: [/*#__PURE__*/_jsxDEV(Field, {\n                  className: classes.inputField,\n                  as: TextField,\n                  id: \"firstName\",\n                  name: \"firstName\",\n                  type: \"text\",\n                  label: \"Nome\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"firstName\",\n                  children: errorMsg => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: errorMsg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: classes.inputField,\n                  as: TextField,\n                  id: \"lastName\",\n                  name: \"lastName\",\n                  type: \"text\",\n                  label: \"Cognome\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"lastName\",\n                  children: errorMsg => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: errorMsg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: classes.inputField,\n                  as: TextField,\n                  id: \"email\",\n                  name: \"email\",\n                  type: \"email\",\n                  label: \"Email\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"email\",\n                  children: errorMsg => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: errorMsg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: classes.inputField,\n                  as: TextField,\n                  id: \"message\",\n                  name: \"message\",\n                  type: \"text\",\n                  label: \"Messaggio\",\n                  multiline: true,\n                  rows: 6,\n                  variant: \"outlined\",\n                  placeholder: \"Descrivi brevemente il tuo problema...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"message\",\n                  children: errorMsg => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: errorMsg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  p: 1,\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: formik.isSubmitting,\n                    type: \"submit\",\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      p: 1,\n      children: \"Causa alto volume di mails, esse verranno elaborate entro 24-48h durante gli orari lavorativi.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/mimmo/OneDrive/Documents/Programmazione/Personal projects/Marina Doc/marina-doc-app/client/src/components/Contacts/Contacts.js"],"names":["React","Formik","Form","Field","ErrorMessage","Grid","Typography","Box","TextField","Button","CardContent","Card","Paper","Link","axios","useStyles","ToastContainer","toast","Yup","Contacts","classes","validationSchema","object","firstName","string","required","lastName","email","message","max","initialValues","card","textAlign","values","actions","payload","post","then","res","console","log","status","success","catch","err","error","formik","handleSubmit","form","inputField","errorMsg","color","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  CardContent,\r\n  Card,\r\n  Paper,\r\n  Link,\r\n} from \"@mui/material\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport useStyles from \"../Utils/Styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst Contacts = () => {\r\n  const classes = useStyles();\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string().required(\"Campo obbligatorio\"),\r\n    lastName: Yup.string().required(\"Campo obbligatorio\"),\r\n    email: Yup.string()\r\n      .email(\"Formato mail non valido\")\r\n      .required(\"Campo obbligatorio\"),\r\n    message: Yup.string()\r\n      .max(250, \"Max caratteri 250\")\r\n      .required(\"Campo obbligatorio\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  return (\r\n    <Card square className={classes.card} id=\"contattami\">\r\n      <CardContent>\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n        />\r\n\r\n        <Grid container direction=\"column\" alignContent=\"center\">\r\n          <Grid item>\r\n            <Typography textAlign=\"center\" variant=\"h4\" gutterBottom>\r\n              Come contattarmi\r\n            </Typography>\r\n\r\n            <Paper elevation={2}>\r\n              <Box p={1} mt={1} mb={1}>\r\n                <Typography gutterBottom>\r\n                  Per visite, richieste, esami e ricette invia una mail a &nbsp;\r\n                  <Link href=\"mailto:tricolidoc@gmail.com\">\r\n                    tricolidoc@gmail.com\r\n                  </Link>\r\n                </Typography>\r\n                <Typography gutterBottom>\r\n                  Per consulto medico indifferibile chiama &nbsp;\r\n                  <Link href=\"tel:+39351-2530433\">351-2530433</Link> o &nbsp;\r\n                  <Link href=\"tel:+39091-520120\">091-520120</Link>\r\n                </Typography>\r\n                <Typography gutterBottom>\r\n                  <strong>NB:</strong> Le telefonate durante l'orario di visita\r\n                  verranno visualizzate e si verrà ricontattati alla fine del\r\n                  ricevimento ambulatoriale, nel rispetto del paziente in visita\r\n                  e al fine di garantire un migliore ascolto.\r\n                </Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Box p={1} mb={1}>\r\n            <Typography p={1} gutterBottom variant=\"h5\">\r\n              <Link href=\"tel:+39091-520120\">Studio: 091-520120</Link>\r\n            </Typography>\r\n            <Typography p={1} gutterBottom variant=\"h5\">\r\n              <Link href=\"tel:+39091-520120\">Cel: 351-2530433</Link>\r\n            </Typography>\r\n            <Typography p={1} gutterBottom variant=\"h5\">\r\n              <Link href=\"mailto: tricolidoc@gmail.com\">\r\n                Mail: tricolidoc@gmail.com\r\n              </Link>\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box p={1} mb={1}>\r\n            <Typography style={{ textAlign: \"center\" }} variant=\"h4\">\r\n              Invia una mail\r\n            </Typography>\r\n          </Box>\r\n          <Formik\r\n            // validateOnMount\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, actions) => {\r\n              const payload = {\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                message: values.message,\r\n              };\r\n\r\n              await axios\r\n                .post(\"https://marinatricolidoc.herokuapp.com/form\", payload)\r\n                .then((res) => {\r\n                  console.log(res);\r\n                  if (res.status === 200)\r\n                    toast.success(\"Messaggio inviato con successo\");\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                  toast.error(\"Si e' verificato un errore!\");\r\n                });\r\n            }}\r\n          >\r\n            {(formik) => {\r\n              return (\r\n                <>\r\n                  <Form onSubmit={formik.handleSubmit} className={classes.form}>\r\n                    <Field\r\n                      className={classes.inputField}\r\n                      as={TextField}\r\n                      id=\"firstName\"\r\n                      name=\"firstName\"\r\n                      type=\"text\"\r\n                      label=\"Nome\"\r\n                      variant=\"outlined\"\r\n                    ></Field>\r\n                    <ErrorMessage name=\"firstName\">\r\n                      {(errorMsg) => (\r\n                        <div style={{ color: \"red\" }}>{errorMsg}</div>\r\n                      )}\r\n                    </ErrorMessage>\r\n\r\n                    <Field\r\n                      className={classes.inputField}\r\n                      as={TextField}\r\n                      id=\"lastName\"\r\n                      name=\"lastName\"\r\n                      type=\"text\"\r\n                      label=\"Cognome\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <ErrorMessage name=\"lastName\">\r\n                      {(errorMsg) => (\r\n                        <div style={{ color: \"red\" }}>{errorMsg}</div>\r\n                      )}\r\n                    </ErrorMessage>\r\n\r\n                    <Field\r\n                      className={classes.inputField}\r\n                      as={TextField}\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                    />\r\n\r\n                    <ErrorMessage name=\"email\">\r\n                      {(errorMsg) => (\r\n                        <div style={{ color: \"red\" }}>{errorMsg}</div>\r\n                      )}\r\n                    </ErrorMessage>\r\n\r\n                    <Field\r\n                      className={classes.inputField}\r\n                      as={TextField}\r\n                      id=\"message\"\r\n                      name=\"message\"\r\n                      type=\"text\"\r\n                      label=\"Messaggio\"\r\n                      multiline={true}\r\n                      rows={6}\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Descrivi brevemente il tuo problema...\"\r\n                    />\r\n                    <ErrorMessage name=\"message\">\r\n                      {(errorMsg) => (\r\n                        <div style={{ color: \"red\" }}>{errorMsg}</div>\r\n                      )}\r\n                    </ErrorMessage>\r\n\r\n                    <Box p={1} textAlign=\"center\">\r\n                      <Button\r\n                        disabled={formik.isSubmitting}\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Box>\r\n                  </Form>\r\n                </>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Grid>\r\n      </CardContent>\r\n      <Typography p={1}>\r\n        Causa alto volume di mails, esse verranno elaborate entro 24-48h durante\r\n        gli orari lavorativi.\r\n      </Typography>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}