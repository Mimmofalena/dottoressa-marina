{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/mimmo/OneDrive/Documents/Programmazione/Personal projects/Marina Doc/marina-doc-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/mimmo/OneDrive/Documents/Programmazione/Personal projects/Marina Doc/marina-doc-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from\"react\";import{Formik,Form,Field,ErrorMessage}from\"formik\";import{Grid,Typography,Box,TextField,Button,CardContent,Card,Paper,Link}from\"@mui/material\";import axios from\"axios\";import useStyles from\"../Utils/Styles\";import{ToastContainer,toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import*as Yup from\"yup\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Contacts=function Contacts(){var classes=useStyles();var validationSchema=Yup.object({firstName:Yup.string().required(\"Campo obbligatorio\"),lastName:Yup.string().required(\"Campo obbligatorio\"),email:Yup.string().email(\"Formato mail non valido\").required(\"Campo obbligatorio\"),message:Yup.string().max(250,\"Max caratteri 250\").required(\"Campo obbligatorio\")});var initialValues={firstName:\"\",lastName:\"\",email:\"\",message:\"\"};return/*#__PURE__*/_jsxs(Card,{square:true,className:classes.card,id:\"contattami\",children:[/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(ToastContainer,{position:\"top-right\",autoClose:5000,hideProgressBar:false,newestOnTop:false}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",alignContent:\"center\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(Typography,{textAlign:\"center\",variant:\"h4\",gutterBottom:true,children:\"Come contattarmi\"}),/*#__PURE__*/_jsx(Paper,{elevation:2,children:/*#__PURE__*/_jsxs(Box,{p:1,mt:1,mb:1,children:[/*#__PURE__*/_jsxs(Typography,{gutterBottom:true,children:[\"Per visite, richieste, esami e ricette invia una mail a \\xA0\",/*#__PURE__*/_jsx(Link,{href:\"mailto:tricolidoc@gmail.com\",children:\"tricolidoc@gmail.com\"})]}),/*#__PURE__*/_jsxs(Typography,{gutterBottom:true,children:[\"Per consulto medico indifferibile chiama \\xA0\",/*#__PURE__*/_jsx(Link,{href:\"tel:+39351-2530433\",children:\"351-2530433\"}),\" o \\xA0\",/*#__PURE__*/_jsx(Link,{href:\"tel:+39091-520120\",children:\"091-520120\"})]}),/*#__PURE__*/_jsxs(Typography,{gutterBottom:true,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"NB:\"}),\" Le telefonate durante l'orario di visita verranno visualizzate e si verr\\xE0 ricontattati alla fine del ricevimento ambulatoriale, nel rispetto del paziente in visita e al fine di garantire un migliore ascolto.\"]})]})})]}),/*#__PURE__*/_jsxs(Box,{p:1,mb:1,children:[/*#__PURE__*/_jsx(Typography,{p:1,gutterBottom:true,variant:\"h5\",children:/*#__PURE__*/_jsx(Link,{href:\"tel:+39091-520120\",children:\"Studio: 091-520120\"})}),/*#__PURE__*/_jsx(Typography,{p:1,gutterBottom:true,variant:\"h5\",children:/*#__PURE__*/_jsx(Link,{href:\"tel:+39091-520120\",children:\"Cel: 351-2530433\"})}),/*#__PURE__*/_jsx(Typography,{p:1,gutterBottom:true,variant:\"h5\",children:/*#__PURE__*/_jsx(Link,{href:\"mailto: tricolidoc@gmail.com\",children:\"Mail: tricolidoc@gmail.com\"})})]}),/*#__PURE__*/_jsx(Box,{p:1,mb:1,children:/*#__PURE__*/_jsx(Typography,{style:{textAlign:\"center\"},variant:\"h4\",children:\"Invia una mail\"})}),/*#__PURE__*/_jsx(Formik// validateOnMount\n,{initialValues:initialValues,validationSchema:validationSchema,onSubmit:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,actions){var payload;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:payload={firstName:values.firstName,lastName:values.lastName,email:values.email,message:values.message};_context.next=3;return axios.post(\"/form\",payload).then(function(res){console.log(res);if(res.status===200)toast.success(\"Messaggio inviato con successo\");}).catch(function(err){console.log(err);toast.error(\"Si e' verificato un errore!\");});case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}(),children:function children(formik){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:formik.handleSubmit,className:classes.form,children:[/*#__PURE__*/_jsx(Field,{className:classes.inputField,as:TextField,id:\"firstName\",name:\"firstName\",type:\"text\",label:\"Nome\",variant:\"outlined\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"firstName\",children:function children(errorMsg){return/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:errorMsg});}}),/*#__PURE__*/_jsx(Field,{className:classes.inputField,as:TextField,id:\"lastName\",name:\"lastName\",type:\"text\",label:\"Cognome\",variant:\"outlined\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"lastName\",children:function children(errorMsg){return/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:errorMsg});}}),/*#__PURE__*/_jsx(Field,{className:classes.inputField,as:TextField,id:\"email\",name:\"email\",type:\"email\",label:\"Email\",variant:\"outlined\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"email\",children:function children(errorMsg){return/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:errorMsg});}}),/*#__PURE__*/_jsx(Field,{className:classes.inputField,as:TextField,id:\"message\",name:\"message\",type:\"text\",label:\"Messaggio\",multiline:true,rows:6,variant:\"outlined\",placeholder:\"Descrivi brevemente il tuo problema...\"}),/*#__PURE__*/_jsx(ErrorMessage,{name:\"message\",children:function children(errorMsg){return/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:errorMsg});}}),/*#__PURE__*/_jsx(Box,{p:1,textAlign:\"center\",children:/*#__PURE__*/_jsx(Button,{disabled:formik.isSubmitting,type:\"submit\",variant:\"contained\",color:\"secondary\",children:\"Submit\"})})]})});}})]})]}),/*#__PURE__*/_jsx(Typography,{p:1,children:\"Causa alto volume di mails, esse verranno elaborate entro 24-48h durante gli orari lavorativi.\"})]});};export default Contacts;","map":{"version":3,"sources":["C:/Users/mimmo/OneDrive/Documents/Programmazione/Personal projects/Marina Doc/marina-doc-app/client/src/components/Contacts/Contacts.js"],"names":["React","Formik","Form","Field","ErrorMessage","Grid","Typography","Box","TextField","Button","CardContent","Card","Paper","Link","axios","useStyles","ToastContainer","toast","Yup","Contacts","classes","validationSchema","object","firstName","string","required","lastName","email","message","max","initialValues","card","textAlign","values","actions","payload","post","then","res","console","log","status","success","catch","err","error","formik","handleSubmit","form","inputField","errorMsg","color","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  CardContent,\r\n  Card,\r\n  Paper,\r\n  Link,\r\n} from \"@mui/material\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport useStyles from \"../Utils/Styles\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst Contacts = () => {\r\n  const classes = useStyles();\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string().required(\"Campo obbligatorio\"),\r\n    lastName: Yup.string().required(\"Campo obbligatorio\"),\r\n    email: Yup.string()\r\n      .email(\"Formato mail non valido\")\r\n      .required(\"Campo obbligatorio\"),\r\n    message: Yup.string()\r\n      .max(250, \"Max caratteri 250\")\r\n      .required(\"Campo obbligatorio\"),\r\n  });\r\n\r\n  const initialValues = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  return (\r\n    <Card square className={classes.card} id=\"contattami\">\r\n      <CardContent>\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n        />\r\n\r\n        <Grid container direction=\"column\" alignContent=\"center\">\r\n          <Grid item>\r\n            <Typography textAlign=\"center\" variant=\"h4\" gutterBottom>\r\n              Come contattarmi\r\n            </Typography>\r\n\r\n            <Paper elevation={2}>\r\n              <Box p={1} mt={1} mb={1}>\r\n                <Typography gutterBottom>\r\n                  Per visite, richieste, esami e ricette invia una mail a &nbsp;\r\n                  <Link href=\"mailto:tricolidoc@gmail.com\">\r\n                    tricolidoc@gmail.com\r\n                  </Link>\r\n                </Typography>\r\n                <Typography gutterBottom>\r\n                  Per consulto medico indifferibile chiama &nbsp;\r\n                  <Link href=\"tel:+39351-2530433\">351-2530433</Link> o &nbsp;\r\n                  <Link href=\"tel:+39091-520120\">091-520120</Link>\r\n                </Typography>\r\n                <Typography gutterBottom>\r\n                  <strong>NB:</strong> Le telefonate durante l'orario di visita\r\n                  verranno visualizzate e si verrà ricontattati alla fine del\r\n                  ricevimento ambulatoriale, nel rispetto del paziente in visita\r\n                  e al fine di garantire un migliore ascolto.\r\n                </Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Box p={1} mb={1}>\r\n            <Typography p={1} gutterBottom variant=\"h5\">\r\n              <Link href=\"tel:+39091-520120\">Studio: 091-520120</Link>\r\n            </Typography>\r\n            <Typography p={1} gutterBottom variant=\"h5\">\r\n              <Link href=\"tel:+39091-520120\">Cel: 351-2530433</Link>\r\n            </Typography>\r\n            <Typography p={1} gutterBottom variant=\"h5\">\r\n              <Link href=\"mailto: tricolidoc@gmail.com\">\r\n                Mail: tricolidoc@gmail.com\r\n              </Link>\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box p={1} mb={1}>\r\n            <Typography style={{ textAlign: \"center\" }} variant=\"h4\">\r\n              Invia una mail\r\n            </Typography>\r\n          </Box>\r\n          <Formik\r\n            // validateOnMount\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={async (values, actions) => {\r\n              const payload = {\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                message: values.message,\r\n              };\r\n\r\n              await axios\r\n                .post(\"/form\", payload)\r\n                .then((res) => {\r\n                  console.log(res);\r\n                  if (res.status === 200)\r\n                    toast.success(\"Messaggio inviato con successo\");\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                  toast.error(\"Si e' verificato un errore!\");\r\n                });\r\n            }}\r\n          >\r\n            {(formik) => {\r\n              return (\r\n                <>\r\n                  <Form onSubmit={formik.handleSubmit} className={classes.form}>\r\n                    <Field\r\n                      className={classes.inputField}\r\n                      as={TextField}\r\n                      id=\"firstName\"\r\n                      name=\"firstName\"\r\n                      type=\"text\"\r\n                      label=\"Nome\"\r\n                      variant=\"outlined\"\r\n                    ></Field>\r\n                    <ErrorMessage name=\"firstName\">\r\n                      {(errorMsg) => (\r\n                        <div style={{ color: \"red\" }}>{errorMsg}</div>\r\n                      )}\r\n                    </ErrorMessage>\r\n\r\n                    <Field\r\n                      className={classes.inputField}\r\n                      as={TextField}\r\n                      id=\"lastName\"\r\n                      name=\"lastName\"\r\n                      type=\"text\"\r\n                      label=\"Cognome\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <ErrorMessage name=\"lastName\">\r\n                      {(errorMsg) => (\r\n                        <div style={{ color: \"red\" }}>{errorMsg}</div>\r\n                      )}\r\n                    </ErrorMessage>\r\n\r\n                    <Field\r\n                      className={classes.inputField}\r\n                      as={TextField}\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                    />\r\n\r\n                    <ErrorMessage name=\"email\">\r\n                      {(errorMsg) => (\r\n                        <div style={{ color: \"red\" }}>{errorMsg}</div>\r\n                      )}\r\n                    </ErrorMessage>\r\n\r\n                    <Field\r\n                      className={classes.inputField}\r\n                      as={TextField}\r\n                      id=\"message\"\r\n                      name=\"message\"\r\n                      type=\"text\"\r\n                      label=\"Messaggio\"\r\n                      multiline={true}\r\n                      rows={6}\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Descrivi brevemente il tuo problema...\"\r\n                    />\r\n                    <ErrorMessage name=\"message\">\r\n                      {(errorMsg) => (\r\n                        <div style={{ color: \"red\" }}>{errorMsg}</div>\r\n                      )}\r\n                    </ErrorMessage>\r\n\r\n                    <Box p={1} textAlign=\"center\">\r\n                      <Button\r\n                        disabled={formik.isSubmitting}\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Box>\r\n                  </Form>\r\n                </>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Grid>\r\n      </CardContent>\r\n      <Typography p={1}>\r\n        Causa alto volume di mails, esse verranno elaborate entro 24-48h durante\r\n        gli orari lavorativi.\r\n      </Typography>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}